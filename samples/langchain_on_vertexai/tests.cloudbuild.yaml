# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: Install dependencies
    name: python:${_VERSION}
    entrypoint: pip
    dir: samples/langchain_on_vertexai
    args: ["install", "--user", "-r", "requirements.txt"]

  - id: Set up
    name: ubuntu
    dir: samples/langchain_on_vertexai
    script: |
      #!/usr/bin/env bash
      sed -i "s/my-project-id/${PROJECT_ID}/g" config.py
      sed -i "s#gs://my-bucket#${STAGING_BUCKET}#g" config.py
      sed -i "s/us-central1/${REGION}/g" config.py
      sed -i "s/my-instance/${INSTANCE}/g" config.py
      sed -i "s/my_database/${DATABASE}/g" config.py
      sed -i "s/my_test_table/${TABLE_NAME}/g" config.py
      sed -i "s/my_chat_table/${CHAT_TABLE_NAME}/g" config.py
      sed -i "s/postgres/${DB_USER}/g" config.py
      sed -i "s/password/${DB_PASSWORD}/g" config.py
    env:
      - PROJECT_ID=$PROJECT_ID
      - STAGING_BUCKET=$_STAGING_BUCKET
      - REGION=$_REGION
      - INSTANCE=$_INSTANCE
      - DATABASE=$_DATABASE
      - TABLE_NAME=$_TABLE_NAME
      - CHAT_TABLE_NAME=$_CHAT_TABLE_NAME
    secretEnv: ["DB_USER", "DB_PASSWORD"]

  - id: Upload embeddings
    name: python:${_VERSION}
    entrypoint: python
    dir: samples/langchain_on_vertexai
    args: ["create_embeddings.py"]

  - id: Run integration tests - PrebuiltAgent
    name: python:${_VERSION}
    entrypoint: python
    dir: samples/langchain_on_vertexai
    args: ["prebuilt_langchain_agent_template.py"]
    env:
      - DISPLAY_NAME=$_DISPLAY_NAME

  - id: Run integration tests - Chain
    name: python:${_VERSION}
    entrypoint: python
    dir: samples/langchain_on_vertexai
    args: ["retriever_chain_template.py"]
    env:
      - DISPLAY_NAME=$_DISPLAY_NAME

  - id: Run integration tests - Agent
    name: python:${_VERSION}
    entrypoint: python
    dir: samples/langchain_on_vertexai
    args: ["retriever_agent_with_history_template.py"]
    env:
      - DISPLAY_NAME=$_DISPLAY_NAME

  - id: Clean up
    name: python:${_VERSION}
    entrypoint: python
    dir: samples/langchain_on_vertexai
    args: ["clean_up.py"]
    env:
      - DISPLAY_NAME=$_DISPLAY_NAME

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/langchain-test-pg-username/versions/1
      env: "DB_USER"
    - versionName: projects/$PROJECT_ID/secrets/langchain-test-pg-password/versions/1
      env: "DB_PASSWORD"

options:
  dynamicSubstitutions: true
  automapSubstitutions: true

substitutions:
  _VERSION: "3.11"
  _STAGING_BUCKET: gs://${PROJECT_ID}_bucket
  _REGION: us-central1
  _INSTANCE: my-postgres-instance
  _DATABASE: reasoning_engine_${SHORT_SHA}
  _TABLE_NAME: movies_${SHORT_SHA}
  _CHAT_TABLE_NAME: my_chat_table_${SHORT_SHA}
  _DISPLAY_NAME: test_${SHORT_SHA}
